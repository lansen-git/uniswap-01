{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\lansen\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\lansen\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\Users\\\\lansen\\\\Desktop\\\\uniswap-front-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _WETH_ONLY;import{ChainId,JSBI,Percent,Token,WETH}from'@uniswap/sdk';import{fortmatic,injected,portis,walletconnect,walletlink}from'../connectors';// a list of tokens by chain\nexport var ROUTER_ADDRESS='0xd101544cd6e7216b40ca76fb8ea79eb86f7c1fdd';export var DAI=new Token(ChainId.MAINNET,'0x6B175474E89094C44Da98b954EedeAC495271d0F',18,'DAI','Dai Stablecoin');export var USDC=new Token(ChainId.MAINNET,'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',6,'USDC','USD//C');export var USDT=new Token(ChainId.MAINNET,'0xdAC17F958D2ee523a2206206994597C13D831ec7',6,'USDT','Tether USD');export var COMP=new Token(ChainId.MAINNET,'0xc00e94Cb662C3520282E6f5717214004A7f26888',18,'COMP','Compound');export var MKR=new Token(ChainId.MAINNET,'0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',18,'MKR','Maker');export var AMPL=new Token(ChainId.MAINNET,'0xD46bA6D942050d489DBd938a2C909A5d5039A161',9,'AMPL','Ampleforth');var WETH_ONLY=(_WETH_ONLY={},_defineProperty(_WETH_ONLY,ChainId.MAINNET,[WETH[ChainId.MAINNET]]),_defineProperty(_WETH_ONLY,ChainId.HECOMAINNET,[WETH[ChainId.HECOMAINNET]]),_defineProperty(_WETH_ONLY,ChainId.ROPSTEN,[WETH[ChainId.ROPSTEN]]),_defineProperty(_WETH_ONLY,ChainId.RINKEBY,[WETH[ChainId.RINKEBY]]),_defineProperty(_WETH_ONLY,ChainId.GÖRLI,[WETH[ChainId.GÖRLI]]),_defineProperty(_WETH_ONLY,ChainId.KOVAN,[WETH[ChainId.KOVAN]]),_WETH_ONLY);// used to construct intermediary pairs for trading\nexport var BASES_TO_CHECK_TRADES_AGAINST=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT,COMP,MKR])));/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */export var CUSTOM_BASES=_defineProperty({},ChainId.MAINNET,_defineProperty({},AMPL.address,[DAI,WETH[ChainId.MAINNET]]));// used for display in the default list when adding liquidity\nexport var SUGGESTED_BASES=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT])));// used to construct the list of all pairs we consider by default in the frontend\nexport var BASES_TO_TRACK_LIQUIDITY_FOR=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT])));export var PINNED_PAIRS=_defineProperty({},ChainId.MAINNET,[[new Token(ChainId.MAINNET,'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',8,'cDAI','Compound Dai'),new Token(ChainId.MAINNET,'0x39AA39c021dfbaE8faC545936693aC917d5E7563',8,'cUSDC','Compound USD Coin')],[USDC,USDT],[DAI,USDT]]);export var SUPPORTED_WALLETS={INJECTED:{connector:injected,name:'Injected',iconName:'arrow-right.svg',description:'Injected web3 provider.',href:null,color:'#010101',primary:true},METAMASK:{connector:injected,name:'MetaMask',iconName:'metamask.png',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},WALLET_CONNECT:{connector:walletconnect,name:'WalletConnect',iconName:'walletConnectIcon.svg',description:'Connect to Trust Wallet, Rainbow Wallet and more...',href:null,color:'#4196FC',mobile:true},WALLET_LINK:{connector:walletlink,name:'Coinbase Wallet',iconName:'coinbaseWalletIcon.svg',description:'Use Coinbase Wallet app on mobile device',href:null,color:'#315CF5'},COINBASE_LINK:{name:'Open in Coinbase Wallet',iconName:'coinbaseWalletIcon.svg',description:'Open in Coinbase Wallet app.',href:'https://go.cb-w.com/mtUDhEZPy1',color:'#315CF5',mobile:true,mobileOnly:true},FORTMATIC:{connector:fortmatic,name:'Fortmatic',iconName:'fortmaticIcon.png',description:'Login using Fortmatic hosted wallet',href:null,color:'#6748FF',mobile:true},Portis:{connector:portis,name:'Portis',iconName:'portisIcon.png',description:'Login using Portis hosted wallet',href:null,color:'#4A6C9B',mobile:true}};export var NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport var INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport var DEFAULT_DEADLINE_FROM_NOW=60*20;// one basis point\nexport var ONE_BIPS=new Percent(JSBI.BigInt(1),JSBI.BigInt(10000));export var BIPS_BASE=JSBI.BigInt(10000);// used for warning states\nexport var ALLOWED_PRICE_IMPACT_LOW=new Percent(JSBI.BigInt(100),BIPS_BASE);// 1%\nexport var ALLOWED_PRICE_IMPACT_MEDIUM=new Percent(JSBI.BigInt(300),BIPS_BASE);// 3%\nexport var ALLOWED_PRICE_IMPACT_HIGH=new Percent(JSBI.BigInt(500),BIPS_BASE);// 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport var PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN=new Percent(JSBI.BigInt(1000),BIPS_BASE);// 10%\n// for non expert mode disable swaps above this\nexport var BLOCKED_PRICE_IMPACT_NON_EXPERT=new Percent(JSBI.BigInt(1500),BIPS_BASE);// 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport var MIN_ETH=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 ETH\nexport var BETTER_TRADE_LINK_THRESHOLD=new Percent(JSBI.BigInt(75),JSBI.BigInt(10000));","map":{"version":3,"sources":["C:/Users/lansen/Desktop/uniswap-front-interface/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","fortmatic","injected","portis","walletconnect","walletlink","ROUTER_ADDRESS","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","WETH_ONLY","HECOMAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","COINBASE_LINK","mobileOnly","FORTMATIC","Portis","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\r\n\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\nexport const ROUTER_ADDRESS = '0xd101544cd6e7216b40ca76fb8ea79eb86f7c1fdd'\r\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\r\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\r\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\r\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\r\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\r\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\r\n  [ChainId.HECOMAINNET]: [WETH[ChainId.HECOMAINNET]],\r\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\r\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\r\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\r\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\r\n  }\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR]\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n  }\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT]\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\r\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')\r\n    ],\r\n    [USDC, USDT],\r\n    [DAI, USDT]\r\n  ]\r\n}\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector\r\n  name: string\r\n  iconName: string\r\n  description: string\r\n  href: string | null\r\n  color: string\r\n  primary?: true\r\n  mobile?: true\r\n  mobileOnly?: true\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D'\r\n  },\r\n  WALLET_CONNECT: {\r\n    connector: walletconnect,\r\n    name: 'WalletConnect',\r\n    iconName: 'walletConnectIcon.svg',\r\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n    href: null,\r\n    color: '#4196FC',\r\n    mobile: true\r\n  },\r\n  WALLET_LINK: {\r\n    connector: walletlink,\r\n    name: 'Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Use Coinbase Wallet app on mobile device',\r\n    href: null,\r\n    color: '#315CF5'\r\n  },\r\n  COINBASE_LINK: {\r\n    name: 'Open in Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Open in Coinbase Wallet app.',\r\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n    color: '#315CF5',\r\n    mobile: true,\r\n    mobileOnly: true\r\n  },\r\n  FORTMATIC: {\r\n    connector: fortmatic,\r\n    name: 'Fortmatic',\r\n    iconName: 'fortmaticIcon.png',\r\n    description: 'Login using Fortmatic hosted wallet',\r\n    href: null,\r\n    color: '#6748FF',\r\n    mobile: true\r\n  },\r\n  Portis: {\r\n    connector: portis,\r\n    name: 'Portis',\r\n    iconName: 'portisIcon.png',\r\n    description: 'Login using Portis hosted wallet',\r\n    href: null,\r\n    color: '#4A6C9B',\r\n    mobile: true\r\n  }\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\r\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\r\n\r\n"]},"metadata":{},"sourceType":"module"}